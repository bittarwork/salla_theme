{#
| Variable                                        | Type                       | Description                                                                                                 |
|-------------------------------------------------|----------------------------|-------------------------------------------------------------------------------------------------------------|
| product.options                                 | ?ProductOption *Collection |                                                                                                             |
| product.options[].id                            | int                        |                                                                                                             |
| product.options[].name                          | string                     |                                                                                                             |
| product.options[].required                      | bool                       |                                                                                                             |
| product.options[].type                          | string                     | single-option,date,datetime,time,image,text,textarea,number,multi-options,splitter,color,thumbnail,donation |
| product.options[].placeholder                   | ?string                    |                                                                                                             |
| product.options[].not_same_day_order            | bool                       |                                                                                                             |
| product.options[].availability_range            | bool                       |                                                                                                             |
| product.options[].from_date_time                | ?string                    | Date, ex: `2021-12-21 21:21:21`                                                                             |
| product.options[].to_date_time                  | ?string                    | Date, ex: `2021-12-21 21:21:21`                                                                             |
| product.options[].visibility_condition          | ?object                    |                                                                                                             |
| product.options[].visibility_condition.option   | int                        | An id of another option from the types (`checkbox`, `radio`)                                                |
| product.options[].visibility_condition.operator | string                     | `=` or `!=`                                                                                                 |
| product.options[].visibility_condition.value    | int                        | An id of optionDetail                                                                                       |
| product.options[].condition_attributes          | ?string                    | ex `data-show-when="options[123] = 123"                                                                     |
| product.options[].element                       | string                     | Html content from files `views/components/product/elements/*.twig`                                          |
| product.options[].details                       | OptionDetail *Collection   |                                                                                                             |
| product.options[].details[].id                  | int                        |                                                                                                             |
| product.options[].details[].name                | string                     | Name only ex `Red`                                                                                          |
| product.options[].details[].full_name           | string                     | Includes name, additional price, and outOfStock ex `Red (+100SAR) - Out Of Stock`                           |
| product.options[].details[].additional_price    | float                      | ex: `100`                                                                                                   |
| product.options[].details[].option_value        | ?string                    | The value of `product.options[].type`, hexColor or image url for types `color`, `image`                     |
| product.options[].details[].image               | ?string                    | An alias for `.option_value`, should be use when `product.options[].type` = `image`                         |
| product.options[].details[].color               | ?string                    | Hex Color, should be use when `product.options[].type` = `color`                                            |
| product.options[].details[].is_selected         | bool                       | Does current option selected? (useful in cart page)                                                         |
| product.options[].details[].is_out              | bool                       | Does current option out of stock?                                                                           |
#}
{% if product.options|length %}
	<div id="product-options">
		{% for option in product.options %}
			{% if option.type == 'single-option' %}
				<div class="product-option-slider">
					<span class="slider-label text-5xl">القياس:</span>
					<div class="slider-container">
						<input type="range" id="option-{{ option.id }}" name="option-{{ option.id }}" min="0" max="{{ option.details|length - 1 }}" value="0" oninput="updateSliderValue({{ option.id }})">
						<div class="slider-thumb-icon" id="thumb-icon-{{ option.id }}">
							<i class="fas fa-gem"></i>
							<div class="slider-value" id="slider-value-{{ option.id }}">{{ option.details[0].name }}</div>
						</div>
					</div>
				</div>
			{% endif %}
		{% endfor %}
	</div>
{% endif %}
{% block scripts %}
	 <script>
						    function updateSliderValue(optionId) {
						        var slider = document.getElementById('option-' + optionId);
						        var valueSpan = document.getElementById('slider-value-' + optionId);
						        var thumbIcon = document.getElementById('thumb-icon-' + optionId);
						        var selectedIndex = slider.value;
						        var options = {{ product.options|json_encode|raw }};
						
						        for (var i = 0; i < options.length; i++) {
						            if (options[i].id === optionId) {
						                var optionDetails = options[i].details;
						                valueSpan.textContent = optionDetails[selectedIndex].name;
	
						                var sliderWidth = slider.clientWidth;
						                var sliderMax = slider.max;
						                var positionPercent = (slider.value / sliderMax) * 100;
	
						                var iconPosition = (positionPercent / 100) * sliderWidth;
						
	
						                if (document.dir === 'rtl') {
						                    iconPosition = sliderWidth - iconPosition;
						                }
	
						                thumbIcon.style.left = `${iconPosition}px`;
						
						                break;
						            }
						        }
						    }
					
						    document.addEventListener("DOMContentLoaded", function() {
						        var sliders = document.querySelectorAll('input[type="range"]');
						        sliders.forEach(function(slider) {
						            var optionId = slider.id.split('-')[1];
						            updateSliderValue(optionId);
						        });
						    });
						</script>
{% endblock %}
